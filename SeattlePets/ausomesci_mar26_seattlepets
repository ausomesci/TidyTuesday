#Seattle Dog names for #TidyTuesday March 26
library(tidyverse)
library(lubridate)
library(scales)

#Read in data
seattle_pets <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-03-26/seattle_pets.csv")

#Fix up the main table first, changing the date into a datetime object
df1 <- seattle_pets %>% 
  filter(species == "Dog") %>% 
  select(license_issue_date,animals_name,primary_breed) %>% 
  mutate(license_issue_date = as.Date(as.character(license_issue_date),format = "%B %d %Y")) %>% 
  mutate(namedate = format(as.Date(license_issue_date), "%Y-%m"))

#Looking for the top 10 dog names in 2018 to index for the filter
names2018 <- df1 %>%
  mutate(license_issue_date = year(license_issue_date)) %>% 
  filter(license_issue_date == 2018) %>% 
  group_by(animals_name) %>% 
  summarize(n=n()) %>% 
  arrange(desc(n)) %>% 
  slice(1:10) %>% 
  mutate(year = 2018)   #Take top 10 names

#Singling out the top 10 dog names and summarizing by month
petnames10 <- df1 %>% 
  filter(animals_name %in% c(names2018$animals_name)) %>% 
  group_by(animals_name, namedate) %>% 
  summarize(n=n())

#Unsure how to make date best... but this works
petnames10$namedate <- as.Date(paste(petnames10$namedate,"-01",sep=""))

#Plot line graphs, separated into facets for the top 10 dogs
p1 <- petnames10 %>% 
  ggplot(aes(x = namedate, y = n)) +
  geom_line(aes(color = animals_name), size=2) +
  facet_wrap(~ animals_name, ncol = 5)+
  scale_x_date(limits = as.Date(c("2016-01-01","2018-01-01")),date_breaks = "1 year", date_labels = "%Y")+
  labs(title="Popular Seattle Dog Names", subtitle="Top 10 name popularity over time",x="Date",y="Number of pets") +
  theme(legend.title = element_blank(),
        legend.key = element_blank(),
        panel.background = element_blank(),
        axis.title = element_text(size = rel(1)),
        axis.title.y = element_text(angle=90,vjust=2,size=rel(2)),
        axis.title.x = element_text(vjust = -0.2,size=rel(2)),
        axis.text = element_text(),
        axis.line = element_line(colour="black"),
        axis.ticks = element_line(),
        panel.grid.major = element_line(colour="#f0f0f0"),
        panel.grid.minor = element_blank(),
        legend.position = "none",
        legend.direction = "vertical",
        legend.key.size = unit(0.5,"cm"),
        legend.text=element_text(size=10),
        legend.spacing.x = unit(0.1,'cm'),
        plot.margin = unit(c(10,5,5,5),"mm"),
        plot.title = element_text(face="bold",size=rel(3),hjust=0.5),
        plot.subtitle = element_text(face="bold",size=rel(2),hjust=0.5),
        panel.spacing = unit(1,"lines"))
p1

